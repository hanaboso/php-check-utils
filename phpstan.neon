includes:
	- ./../../phpstan/phpstan-nette/extension.neon
	- ./../../phpstan/phpstan-symfony/extension.neon
	- ./../../phpstan/phpstan-phpunit/extension.neon
	- ./../../phpstan/phpstan-doctrine/extension.neon
	- ./../../phpstan/phpstan-nette/rules.neon
	- ./../../phpstan/phpstan-symfony/rules.neon
	- ./../../phpstan/phpstan-phpunit/rules.neon
	- ./../../phpstan/phpstan-doctrine/rules.neon

parameters:
	polluteScopeWithLoopInitialAssignments: false
	polluteScopeWithAlwaysIterableForeach: false
	checkAlwaysTrueCheckTypeFunctionCall: true
	checkAlwaysTrueInstanceof: true
	checkAlwaysTrueStrictComparison: true
	checkExplicitMixedMissingReturn: true
	checkFunctionNameCase: true
	checkMissingClosureNativeReturnTypehintRule: true
	reportMaybesInMethodSignatures: true
	reportStaticMethodSignatures: true
	reportUnmatchedIgnoredErrors: false
	ignoreErrors:
		- '#Expression \"\$.*\" on a separate line does not do anything\.#'
		- '#Call to an undefined method React\\Promise\\PromiseInterface::(otherwise|done|cancel|reject)\(\)\.#' # remove after install react/promises 3.0
		- '#Call to an undefined method Doctrine\\Common\\Persistence\\ObjectRepository::*.#' # remove after better doctrine support
		- '#Call to an undefined method Doctrine\\ORM\\EntityRepository::*.#' # remove after better doctrine support
		- '#Call to an undefined method Doctrine\\ODM\\MongoDB\\DocumentRepository::*.#' # remove after better doctrine support

services:
	-
		class: Spaze\PHPStan\Rules\Disallowed\FunctionCalls
		tags:
			- phpstan.rules.rule
		arguments:
			forbiddenCalls:
				-
					function: 'var_dump()'
					message: 'use logger instead'
				-
					function: 'var_export()'
					message: 'use logger instead'
				-
					function: 'print_r()'
					message: 'use logger instead'
				-
					function: 'file_put_content()'
					message: 'use Hanaboso\Utils\File\Files::putContent() or logger instead'
				-
					function: 'file_get_content()'
					message: 'use Hanaboso\Utils\File\Files::getContent() instead'
				-
					function: 'json_decode()'
					message: 'use Hanaboso\Utils\String\Json::decode() instead'
				-
					function: 'json_encode()'
					message: 'use Hanaboso\Utils\String\Json::encode() instead'

	-
		class: Spaze\PHPStan\Rules\Disallowed\StaticCalls
		tags:
			- phpstan.rules.rule
		arguments:
			forbiddenCalls:
				-
					method: 'Nette\Utils\Json::decode()'
					message: 'use Hanaboso\Utils\String\Json::decode() instead'
				-
					method: 'Nette\Utils\Json::encode()'
					message: 'use Hanaboso\Utils\String\Json::encode() instead'


	-
		class: PHPStan\Rules\Operators\OperatorRuleHelper
	-
		class: PHPStan\Rules\VariableVariables\VariablePropertyFetchRule
		arguments:
			universalObjectCratesClasses: %universalObjectCratesClasses%
		tags:
			- phpstan.rules.rule

	-
		class: PHPStan\Rules\Cast\UselessCastRule
		arguments:
			treatPhpDocTypesAsCertain: %treatPhpDocTypesAsCertain%
		tags:
			- phpstan.rules.rule

rules:
	- PHPStan\Rules\Classes\RequireParentConstructCallRule
	- PHPStan\Rules\DisallowedConstructs\DisallowedImplicitArrayCreationRule
	- PHPStan\Rules\ForeachLoop\OverwriteVariablesWithForeachRule
	- PHPStan\Rules\Methods\WrongCaseOfInheritedMethodRule
	- PHPStan\Rules\Operators\OperandInArithmeticPostDecrementRule
	- PHPStan\Rules\Operators\OperandInArithmeticPostIncrementRule
	- PHPStan\Rules\Operators\OperandInArithmeticPreDecrementRule
	- PHPStan\Rules\Operators\OperandInArithmeticPreIncrementRule
	- PHPStan\Rules\Operators\OperandsInArithmeticAdditionRule
	- PHPStan\Rules\Operators\OperandsInArithmeticDivisionRule
	- PHPStan\Rules\Operators\OperandsInArithmeticExponentiationRule
	- PHPStan\Rules\Operators\OperandsInArithmeticModuloRule
	- PHPStan\Rules\Operators\OperandsInArithmeticMultiplicationRule
	- PHPStan\Rules\Operators\OperandsInArithmeticSubtractionRule
	- PHPStan\Rules\StrictCalls\DynamicCallOnStaticMethodsRule
	- PHPStan\Rules\StrictCalls\StrictFunctionCallsRule
	- PHPStan\Rules\SwitchConditions\MatchingTypeInSwitchCaseConditionRule
	- PHPStan\Rules\VariableVariables\VariableMethodCallRule
	- PHPStan\Rules\VariableVariables\VariableStaticMethodCallRule
	- PHPStan\Rules\VariableVariables\VariableStaticPropertyFetchRule
	- PHPStan\Rules\VariableVariables\VariableVariablesRule